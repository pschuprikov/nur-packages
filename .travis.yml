language: nix
nix: 2.3.4

sudo: false


env:
  global:
  - CACHIX_CACHE=pschuprikov
  - NUR_REPO=pschuprikov/nur-packages
  # CACHIX_SIGNING_KEY
  - secure: VVc5W9Emk3aw772x/4tFEbBSNb4X5F5VLMrGHT3rMt8KkQ3EkbJCGdLXIoeXutVEnv0kUg3Tbq1bYAY4G0f0/Vla6p8tMxq7UG6I3yXibp0EcunLbIrFlIKgd8krm/mZxie9MDpnmMxaoa16pB+Mu1+Pjon6m1i9+LWxMH5e763SLk11TKi4PnbNJaqHMW6wO8CvfXm0AJkaiGu0tRje7CrUbjItC1U1SsuPfKW8bIKSDxH4h/wUBRDqX+JvX5K4zEWZRiPJwFwkHGERVchC40nEa3a6vEa1HQRvVBjcgHdLZpoHvHys2BpRsJCZgyp5QlGICMZ86ATo+6foVlOCdIqtYRo8ueDI5WNkYRmVml4H+6Y93k/3dY88aWVQIXorPtEkG9zrVNQWWABItKtxZdJEVRn/f5HaGD0UXDoqF3amEcdJXRRhWVO8/ZerAjUa09SW2WrAB3TWt807ilZNpNwgdUfKG1aB0nH/M2zDjVQI5cbwk4xj5m3/J2xCuNGgxNnfVaGJ77D4lXvsTBT71UMvQk8sneykBNGpfWSl/GhN23J8vfFJSw8WHnoy6Wvw9GGIk+/l4ksi1FZP5O+tSG+yo2CW9NmdB6uvtaVSegy7+EnZ49cP/xv18KkM1GMlgpS5iPqPG3pRzjoJ5ofq8QYwhEnJFFrO0wCQu7sR120=

jobs:
  include:
  - env: NIX_CHANNEL=https://nixos.org/channels/nixos-unstable
    os: linux
  - env: NIX_CHANNEL=https://nixos.org/channels/nixos-20.03
    os: linux

install:
  - nix --version
  # for cachix we need travis to be a trusted nix user
  - echo "trusted-users = $USER" | sudo tee -a /etc/nix/nix.conf
  - sudo systemctl restart nix-daemon
  - if [ -n "${CACHIX_CACHE}" ]; then travis_retry nix-channel --update; fi
  - if [ -n "${CACHIX_CACHE}" ]; then nix-env -iA cachix -f https://cachix.org/api/v1/install; fi
  - if [ -n "${CACHIX_CACHE}" ]; then cachix use "${CACHIX_CACHE}"; fi
  - nix-channel --add "${NIX_CHANNEL}" nixpkgs
  - travis_retry nix-channel --update
  - nix-channel --list
  - nix-instantiate --eval -E 'with import <nixpkgs> {}; lib.version or lib.nixpkgsVersion'
  - echo $NIX_PATH

script:
  - timeout 40m nix-build ci.nix -A buildOutputs
  - nix eval -f default.nix 'lib'
  - nix eval -f default.nix 'modules'
  - nix eval -f default.nix 'overlays'

after_success:
  - if [ -n "${CACHIX_CACHE}" ]; then nix-build ci.nix -A cacheOutputs | cachix push "${CACHIX_CACHE}"; fi
  - if [ "cron" != "${TRAVIS_EVENT_TYPE}" -a "false" = "${TRAVIS_PULL_REQUEST}" -a "master" = "${TRAVIS_BRANCH}" ]; then
      curl -XPOST "https://nur-update.herokuapp.com/update?repo=${NUR_REPO}"; fi

after_failure:
  - if [ -n "${CACHIX_CACHE}" ]; then (
        for x in $(nix-instantiate ci.nix -A cacheOutputs 2>/dev/null); do 
            output="$(nix-store --query --outputs $x 2>/dev/null)"; 
            if [ -e $x ] && [ -e $output ]; then 
                echo $output; 
            fi; 
        done
      ) | cachix push "${CACHIX_CACHE}"; fi
